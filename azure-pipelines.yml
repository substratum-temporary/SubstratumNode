# Copyright (c) 2017-2019, Substratum LLC (https://substratum.net) and/or its affiliates. All rights reserved.

pr:
  - master

strategy:
  matrix:
    linux:
      imageName: "ubuntu-latest"
    mac:
      imageName: "macOS-latest"
    windows:
      imageName: "windows-latest"

variables:
  rust_version: "1.37.0"
  node_version: "10.16.3"
  AZP_CACHING_TAR: true # requires minimum agent version of 2.157.0 (rolling out Palindrome Week)

pool:
  vmImage: $(imageName)

steps:
  - task: CacheBeta@0
    inputs:
      key: |
        "$(rust_version)" | $(Agent.OS) | "v3.7"
      path: $(Pipeline.Workspace)/toolchains
      cacheHitVar: NODE_TOOLCHAINS_RESTORED

  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)

  - task: Npm@1
    inputs:
      command: 'custom'
      customCommand: 'install -g yarn'

  - bash: ci/install_node_toolchain.sh '$(Pipeline.Workspace)' '$(rust_version)'
    condition: ne(variables.NODE_TOOLCHAINS_RESTORED, 'true')
    displayName: "Install Node toolchain"

  - bash: ci/install_ui_test_toolchain.sh '$(Pipeline.Workspace)'
    displayName: "Install NodeUI test toolchain"

  - script: |
      netsh advfirewall set allprofiles state off
      net stop sharedaccess || echo ICS already disabled
      net stop W3SVC || echo W3SVC service already disabled
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: "Disable Annoying Windows Services"

  - bash: ci/prepare_node_build.sh '$(Pipeline.Workspace)'
    displayName: "Prepare Node build"
  - bash: ci/sccache.sh '$(Pipeline.Workspace)' && node/ci/all.sh '$(Pipeline.Workspace)' && dns_utility/ci/all.sh '$(Pipeline.Workspace)'
    displayName: "Build Node and run tests"

    #  - bash: ci/multinode_integration_test.sh '$(Pipeline.Workspace)'
  - bash: echo "This is only here to fail the build" && exit 99
    displayName: "Run multinode integration tests"

  - bash: ci/prepare_node_ui_build.sh
    displayName: "Prepare NodeUI build"
  - bash: node-ui/ci/build.sh && node-ui/ci/unit_tests.sh && node-ui/ci/ng_tests.sh && node-ui/ci/integration_tests.sh
    displayName: "Build NodeUI and run tests"

  - bash: |
      ci/collect_results.sh
      ci/publish_results.sh
    env:
      CURRENT_PULL_REQUEST_SOURCE_BRANCH: $(System.PullRequest.SourceBranch)
      CURRENT_BUILD_BRANCH: $(Build.SourceBranch)
    displayName: "Publish Results"
    condition: failed()
